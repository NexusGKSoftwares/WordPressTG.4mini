-- Create themes table
create table public.themes (
    id uuid default uuid_generate_v4() primary key,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    user_id text not null,
    name text not null,
    description text,
    preview_url text,
    code text,
    theme_type text not null,
    color_scheme text not null,
    layout text not null,
    typography text not null,
    features text[] default '{}',
    is_published boolean default false
);

-- Create theme_assets table
create table public.theme_assets (
    id uuid default uuid_generate_v4() primary key,
    created_at timestamp with time zone default timezone('utc'::text, now()) not null,
    theme_id uuid references public.themes(id) on delete cascade,
    asset_url text not null,
    asset_type text not null
);

-- Enable Row Level Security
alter table public.themes enable row level security;
alter table public.theme_assets enable row level security;

-- Create policies
create policy "Users can view own themes"
    on public.themes for select
    using (auth.uid()::text = user_id);

create policy "Users can insert own themes"
    on public.themes for insert
    with check (auth.uid()::text = user_id);

create policy "Users can update own themes"
    on public.themes for update
    using (auth.uid()::text = user_id);

create policy "Users can delete own themes"
    on public.themes for delete
    using (auth.uid()::text = user_id);

-- Asset policies
create policy "Users can view assets of owned themes"
    on public.theme_assets for select
    using (
        exists (
            select 1 from public.themes
            where themes.id = theme_assets.theme_id
            and themes.user_id = auth.uid()::text
        )
    );

create policy "Users can insert assets for owned themes"
    on public.theme_assets for insert
    with check (
        exists (
            select 1 from public.themes
            where themes.id = theme_assets.theme_id
            and themes.user_id = auth.uid()::text
        )
    );

create policy "Users can delete assets of owned themes"
    on public.theme_assets for delete
    using (
        exists (
            select 1 from public.themes
            where themes.id = theme_assets.theme_id
            and themes.user_id = auth.uid()::text
        )
    );

